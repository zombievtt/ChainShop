setTitle("刪除分店");

//取格所有分店資訊
List<BranchShop> l = new BranchShopServiceImpl().queryAll();
Integer size = l.size();
if (size.equals(0))
{
	JOptionPane.showMessageDialog(null,"沒有分店可以刪除","刪除分店",JOptionPane.WARNING_MESSAGE);

}
else
{
	addCbList();
		
}


JButton btnOK = new JButton("確定");
btnOK.addMouseListener(new MouseAdapter() {
	@Override
	public void mouseClicked(MouseEvent e) {
		List<BranchShop> l = null;

		//有任何分店存在嗎
		boolean b = checkOwnBranchShop();
		if (b)
		{
			//有
			//取得欲刪除的分店名稱
			String strShopName = cbShopNameList.getSelectedItem().toString().trim();
			
			//取得該分店名稱資訊
			List<BranchShop> listBs = new BranchShopServiceImpl().queryAllByShopName(strShopName);
			BranchShop bs = listBs.get(0);
			Integer id = bs.getId();

			//刪除分店
			new BranchShopServiceImpl().deleteBranchShopById(id);

			//移除所選的分店項目
			Integer indexSelected = cbShopNameList.getSelectedIndex();
			cbShopNameList.removeItem(strShopName);

			//即時更新
			cbShopNameList.invalidate();
			
			//取得該分店的所有員工資訊
			List<Employee> listEmployee = new EmployeeServiceImpl().queryAllByShopName(strShopName);
			for (Employee em:listEmployee)
			{
				//刪除員工資訊
				new EmployeeServiceImpl().deleteEmployeeById(em.getId());
			}
			
			//取得該分店的所有訂單資訊
			List<BuyOrder> listBuyOrder = new BuyOrderServiceImpl().queryAllByShopName(strShopName);
			for (BuyOrder bo:listBuyOrder)
			{
				//刪除訂單資訊
				new BuyOrderServiceImpl().deleteBuyOrderById(bo.getId());
			}
			
			JOptionPane.showMessageDialog(null,"刪除分店成功","刪除分店",JOptionPane.WARNING_MESSAGE);
			repaint();
		}
	}
});

//載入所有分店名稱成列表
private void addCbList()
{
List<BranchShop> list = new BranchShopServiceImpl().queryAll();
for (BranchShop o:list)
{
	cbShopNameList.addItem(o.getShopName());
}	
}

//是否存在任何分店
private boolean checkOwnBranchShop()
{
List<BranchShop> l = new BranchShopServiceImpl().queryAll();
Integer size = l.size();
if (size.equals(0))
{
	JOptionPane.showMessageDialog(null,"沒有分店可以刪除","刪除分店",JOptionPane.WARNING_MESSAGE);
	return false;
}
return true;
}

